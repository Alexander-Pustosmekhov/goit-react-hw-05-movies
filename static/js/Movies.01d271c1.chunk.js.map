{"version":3,"file":"static/js/Movies.01d271c1.chunk.js","mappings":"wOACA,EAAwB,sBAAxB,EAAuD,uBAAvD,EAAqF,qBAArF,EAAiH,qB,SCKzGA,EAAWC,EAAAA,EAAAA,OAEJ,SAASC,IACtB,OAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAAoCF,EAAAA,EAAAA,UAAS,IAA7C,eAAOG,EAAP,KAAmBC,EAAnB,KACA,GAAsBJ,EAAAA,EAAAA,UAAS,IAA/B,eAAOK,EAAP,KAAYC,EAAZ,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAQF,EAAaG,IAAI,UAW/BC,EAAAA,EAAAA,YAAU,WACM,OAAVF,IAIJG,EAAAA,EAAAA,IAAiBH,GACdI,MAAK,SAAAC,GAAM,OAAIX,EAAcW,MAC7BC,OAAM,SAAAC,GAAK,OAAIX,EAAOW,EAAMC,cAC9B,CAACR,IAEJ,IAAQS,EAA2BhB,EAA3BgB,QAASC,EAAkBjB,EAAlBiB,cAEjB,OACE,iCACE,kBAAMC,SAnBV,SAAsBC,GACpBA,EAAEC,iBACFd,EAAgB,CAAEC,MAAOT,KAiBvB,WACE,kBACEuB,UAAWC,EACXC,KAAK,OACLzB,KAAK,OACL0B,MAAO1B,EACP2B,SA7BR,YAA0C,IAAZD,EAAW,EAArBE,OAAUF,MAC5BzB,EAAQyB,EAAMG,YA8BV,mBAAQN,UAAWC,EAAUC,KAAK,SAAlC,uBAIDP,GACC,eAAIK,UAAWC,EAAf,SACGN,EAAQY,KAAI,YAA6B,IAA1BC,EAAyB,EAAzBA,GAAIC,EAAqB,EAArBA,eAClB,OACE,yBACE,SAAC,KAAD,CACET,UAAWC,EACXS,GAAE,UAAKrC,EAAL,YAAemC,GACjBG,MAAO,CAAEtC,OAAAA,EAAQuC,KAAK,iBAAD,OAAmB1B,IAH1C,SAKGuB,KANID,QAYb,KACe,IAAlBZ,GAAsB,oLAAqC,KAC3Df,GAAM,4CAAoBA,KAAW","sources":["webpack://goit-react-hw-05-movies/./src/components/Movies/Movies.module.css?9f30","components/Movies/Movies.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"input\":\"Movies_input__OE3ef\",\"button\":\"Movies_button__hVjwG\",\"list\":\"Movies_list__JEO-P\",\"link\":\"Movies_link__0oDWE\"};","import { useState, useEffect } from 'react';\nimport { FetchMovieByName } from 'components/service/FetchMovies';\nimport { Link, useSearchParams } from 'react-router-dom';\nimport { constants } from 'helpers/constants';\nimport s from './Movies.module.css';\n\nconst { movies } = constants;\n\nexport default function Movies() {\n  const [name, setName] = useState('');\n  const [searchFilm, setSearchFilm] = useState({});\n  const [err, setErr] = useState('');\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query');\n\n  function onChange({ target: { value } }) {\n    setName(value.trim());\n  }\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    setSearchParams({ query: name });\n  }\n\n  useEffect(() => {\n    if (query === null) {\n      return;\n    }\n\n    FetchMovieByName(query)\n      .then(result => setSearchFilm(result))\n      .catch(error => setErr(error.message));\n  }, [query]);\n\n  const { results, total_results } = searchFilm;\n\n  return (\n    <>\n      <form onSubmit={handleSubmit}>\n        <input\n          className={s.input}\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          onChange={onChange}\n        />\n        <button className={s.button} type=\"submit\">\n          Search\n        </button>\n      </form>\n      {results ? (\n        <ul className={s.list}>\n          {results.map(({ id, original_title }) => {\n            return (\n              <li key={id}>\n                <Link\n                  className={s.link}\n                  to={`${movies}/${id}`}\n                  state={{ movies, from: `/movies?query=${query}` }}\n                >\n                  {original_title}\n                </Link>\n              </li>\n            );\n          })}\n        </ul>\n      ) : null}\n      {total_results === 0 ? <p>Введите правильное название</p> : null}\n      {err ? <p>Films not found {err}</p> : null}\n    </>\n  );\n}\n"],"names":["movies","constants","Movies","useState","name","setName","searchFilm","setSearchFilm","err","setErr","useSearchParams","searchParams","setSearchParams","query","get","useEffect","FetchMovieByName","then","result","catch","error","message","results","total_results","onSubmit","e","preventDefault","className","s","type","value","onChange","target","trim","map","id","original_title","to","state","from"],"sourceRoot":""}